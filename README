# 🚨 SafeYard API

**SafeYard** é uma API REST desenvolvida em Java com Spring Boot para gerenciar a **entrada, saída, locação e controle de motos** em um pátio. O projeto foi construído com base nos padrões de arquitetura utilizados em aula, incluindo boas práticas de validação, DTOs, tratamento global de erros e filtros dinâmicos.

---

## 🛠️ Tecnologias Utilizadas

- Java 17
- Spring Boot 3.4.3
- Maven
- Spring Web
- Spring Data JPA
- Bean Validation
- H2 Database (memória)
- Lombok
- Swagger (SpringDoc OpenAPI)
- DevTools
- Cache (pronto para uso futuro)

---

## 🗂️ Funcionalidades

### ✅ Cadastro e Gerenciamento de:
- **Motos** (`/api/motos`)
- **Clientes** (`/api/clientes`)
- **Locações** (`/api/locacoes`)
- **Entradas e saídas no pátio** (`/api/registros`)

### ✅ Filtros disponíveis:
- 📆 Locação por cliente, moto, período de saída/devolução
- 📍 Registros por moto, tipo (`entrada/saida`) e período

---

## 📦 Instalação e Execução

### 🔧 Pré-requisitos
- Java 17
- Maven

### ▶️ Executar localmente

```bash
# Clonar o repositório
git clone https://github.com/ThamiresRC/SafeYardApi

# Entrar na pasta
cd safeyard

# Executar o projeto
./mvnw spring-boot:run

# Execute sem clonar o projeto:
docker run -p 8080:8080 thamiresrc/safeyard-api



👨‍💻 Desenvolvedores

Thamires Ribeiro Cruz RM558128 github.com/ThamiresRC
Adonay Rodrigues da Rocha RM558782 github.com/AdonayRocha
Pedro Henrique Martins dos Reis RM555306 github.com/pxxmdr